name: Release Fixed

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # to create releases
      id-token: write  # for PyPI trusted publishing (optional)

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch all history for all tags and branches

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: |
        python -m build

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*
      continue-on-error: true  # Don't fail if PyPI upload fails

    - name: Get previous tag
      id: previoustag
      run: |
        echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        echo "prev_tag=$(git describe --tags --abbrev=0 HEAD^ || echo '')" >> $GITHUB_OUTPUT

    - name: Generate release notes
      id: release_notes
      run: |
        TAG="${{ steps.previoustag.outputs.tag }}"
        PREV_TAG="${{ steps.previoustag.outputs.prev_tag }}"
        
        if [ -n "$PREV_TAG" ]; then
          echo "## What's Changed in $TAG" > release_notes.md
          echo "" >> release_notes.md
          git log --pretty=format:"- %s (%h)" "$PREV_TAG".."$TAG" >> release_notes.md
          echo "" >> release_notes.md
        else
          echo "## Initial Release: $TAG" > release_notes.md
          echo "" >> release_notes.md
          echo "First release of jebasa - Japanese ebook audio subtitle aligner" >> release_notes.md
        fi
        
        echo "## Installation" >> release_notes.md
        echo '```bash' >> release_notes.md
        echo 'pip install jebasa' >> release_notes.md
        echo '```' >> release_notes.md
        echo "" >> release_notes.md
        echo "## Quick Start" >> release_notes.md
        echo '```bash' >> release_notes.md
        echo 'jebasa run --input-dir ./input --output-dir ./output' >> release_notes.md
        echo '```' >> release_notes.md

    - name: Create GitHub Release with softprops/action-gh-release
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ steps.previoustag.outputs.tag }}
        tag_name: ${{ steps.previoustag.outputs.tag }}
        body_path: release_notes.md
        draft: false
        prerelease: false
        generate_release_notes: false
        files: |
          dist/*.whl
          dist/*.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Alternative: Create Release with GitHub CLI
      if: failure()
      run: |
        gh release create "${{ steps.previoustag.outputs.tag }}" \
          --title "Release ${{ steps.previoustag.outputs.tag }}" \
          --notes-file release_notes.md \
          dist/*.whl dist/*.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      continue-on-error: true